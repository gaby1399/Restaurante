/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaVista;

import CapaLogica.Adicional;
import CapaLogica.ExtraRefresco;
import CapaLogica.PlatoPrincipal;
import CapaLogica.Producto;
import CapaLogica.Refresco;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabriela
 */
public class FrmProducto extends javax.swing.JFrame {

   private static Producto productoMante=null;
    DefaultTableModel modeloTableProducto= new DefaultTableModel();
    
  
    static boolean plato=false;
    static boolean adic=false;
    static boolean refres=false;
    public FrmProducto() {
        initComponents();
        modeloTableProducto=(DefaultTableModel) jTblProducto.getModel();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoProductos = new javax.swing.ButtonGroup();
        jToolBarManten = new javax.swing.JToolBar();
        jBtnNuevo = new javax.swing.JButton();
        jBtnModificar = new javax.swing.JButton();
        jBtnEliminar = new javax.swing.JButton();
        jBtnConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblProducto = new javax.swing.JTable();
        jRdbPlato = new javax.swing.JRadioButton();
        jRdbFresc = new javax.swing.JRadioButton();
        jRdbAdic = new javax.swing.JRadioButton();
        jBtnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBarManten.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mantenimiento Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N
        jToolBarManten.setRollover(true);

        jBtnNuevo.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jBtnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Nuevo.jpg"))); // NOI18N
        jBtnNuevo.setText("Nuevo");
        jBtnNuevo.setEnabled(false);
        jBtnNuevo.setFocusable(false);
        jBtnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnNuevo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBtnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnNuevoActionPerformed(evt);
            }
        });
        jToolBarManten.add(jBtnNuevo);

        jBtnModificar.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jBtnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Modificar.png"))); // NOI18N
        jBtnModificar.setText("Modificar");
        jBtnModificar.setFocusable(false);
        jBtnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnModificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnModificarActionPerformed(evt);
            }
        });
        jToolBarManten.add(jBtnModificar);

        jBtnEliminar.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jBtnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancelar.jpg"))); // NOI18N
        jBtnEliminar.setText("Eliminar");
        jBtnEliminar.setFocusable(false);
        jBtnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarActionPerformed(evt);
            }
        });
        jToolBarManten.add(jBtnEliminar);

        jBtnConsultar.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jBtnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/consultar.png"))); // NOI18N
        jBtnConsultar.setText("Consultar");
        jBtnConsultar.setFocusable(false);
        jBtnConsultar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnConsultar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnConsultarActionPerformed(evt);
            }
        });
        jToolBarManten.add(jBtnConsultar);

        jTblProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nombre", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblProductoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTblProducto);

        GrupoProductos.add(jRdbPlato);
        jRdbPlato.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jRdbPlato.setText("Plato Principal");
        jRdbPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRdbPlatoActionPerformed(evt);
            }
        });

        GrupoProductos.add(jRdbFresc);
        jRdbFresc.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jRdbFresc.setText("Refresco");
        jRdbFresc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRdbFrescActionPerformed(evt);
            }
        });

        GrupoProductos.add(jRdbAdic);
        jRdbAdic.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jRdbAdic.setText("Adicional");
        jRdbAdic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRdbAdicActionPerformed(evt);
            }
        });

        jBtnSalir.setText("Salir");
        jBtnSalir.setFocusable(false);
        jBtnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBarManten, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(108, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jRdbPlato)
                                    .addGap(18, 18, 18)
                                    .addComponent(jRdbFresc)
                                    .addGap(36, 36, 36)
                                    .addComponent(jRdbAdic))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBarManten, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRdbPlato)
                    .addComponent(jRdbFresc)
                    .addComponent(jRdbAdic))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnSalir)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnNuevoActionPerformed
      JDlgProducto dlgProducto = new JDlgProducto("", TipoMantenProd.AGREGAR);
        dlgProducto.setModal(true);//Indica que no se puede pasar a la ventana anterior mientras no se cierre esta
        dlgProducto.setLocationRelativeTo(null);
        dlgProducto.setVisible(true);
        //Cuando regresa del JDialog debe traer el producto a agregar
        if(this.productoMante!= null){
             try {
              for (int i = 0; i < Producto.listadoProducto().size(); i++) {
                  if(productoMante.getCodigo().equalsIgnoreCase(Producto.listadoProducto().get(i).getCodigo())){
                      JOptionPane.showMessageDialog(null, "El codigo asignado ya existe, ingrese uno nuevo");
                      return;
                  }
              } } catch (Exception ex) {
                      JOptionPane.showMessageDialog(null,"Error al ingresar producto"+
                      ex.toString()+"\n"+ex.getMessage());
             }
            try {
                //Agrega el producto al archivo
                Producto.agregarProducto(productoMante);
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error al grabar el producto, consulte al administrador\n"+ex.toString());
                System.exit(0);
            }
           //actualiza la tabla con el nuevo departamento
            if(jRdbPlato.isSelected()){
                refres=false;
                plato=true;
                adic=false;
                
            }else{
                if(jRdbAdic.isSelected()){
                    plato=false;
                    adic=true;
                    refres=false;
                    
                }else{
                    refres=true;
                    plato=false;
                    adic=false;
                    
                }
              
            }
           llenaTabla();   
        }
         GrupoProductos.clearSelection();
         desactivarBotonesModificarEliminar();
    }//GEN-LAST:event_jBtnNuevoActionPerformed

    private void jBtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnModificarActionPerformed
     
    if(jRdbPlato.isSelected()){
         plato=true;
         adic=false;
         refres=false;
        if(jTblProducto.getSelectedRow()>= 0){
            String codigo = jTblProducto.getValueAt(jTblProducto.getSelectedRow(),0).toString();
            JDlgProducto dlgProducto =
            new JDlgProducto( codigo, TipoMantenProd.MODIFICAR);//OJO se envÃ­a al contructor del JDialog el cÃ³digo del Prod
            dlgProducto.setModal(true);//Indica que no se puede pasar a la ventana anterior mientras no se cierre esta
            dlgProducto.setLocationRelativeTo(null);
            dlgProducto.setVisible(true);
            //Cuando regresa del JDialog debe traer el producto con los atributos modificados
            
            if(this.productoMante!= null){
                try {
                    //Modifica el producto de la lista
                          Producto.modificarProducto((PlatoPrincipal)productoMante);
                     } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error al modificar el producto\n"+ ex.toString());
                    System.exit(0);
                }
                    llenaTabla();
                    jTblProducto.clearSelection();
            }
            else{
            JOptionPane.showMessageDialog(null,"Debe seleccionar el producto a modificar");
            return;
            }
          
        }
    
        }else{
                if(jRdbAdic.isSelected()){
                    plato=false;
                    adic=true;
                    refres=false;
                      if(jTblProducto.getSelectedRow()>= 0){
            String codigo = jTblProducto.getValueAt(jTblProducto.getSelectedRow(),0).toString();
            JDlgProducto dlgProducto =
            new JDlgProducto( codigo, TipoMantenProd.MODIFICAR);//OJO se envÃ­a al contructor del JDialog el cÃ³digo del Prod
            dlgProducto.setModal(true);//Indica que no se puede pasar a la ventana anterior mientras no se cierre esta
            dlgProducto.setLocationRelativeTo(null);
            dlgProducto.setVisible(true);
            //Cuando regresa del JDialog debe traer el producto con los atributos modificados
             
            if(this.productoMante!= null){
                try {
                    //Modifica el producto de la lista
                 Producto.modificarProducto((Adicional)productoMante);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error al modificar el producto\n"+ ex.toString());
                    System.exit(0);
                }
                   llenaTabla();
                    jTblProducto.clearSelection();
               }else{
                  JOptionPane.showMessageDialog(null,"Debe seleccionar el producto a modificar");
                   return;
                   }
             
               }
     }else{
                if(jTblProducto.getSelectedRow()>= 0){
            String codigo = jTblProducto.getValueAt(jTblProducto.getSelectedRow(),0).toString();
            JDlgProducto dlgProducto =
            new JDlgProducto( codigo, TipoMantenProd.MODIFICAR);//OJO se envÃ­a al contructor del JDialog el cÃ³digo del Prod
            dlgProducto.setModal(true);//Indica que no se puede pasar a la ventana anterior mientras no se cierre esta
            dlgProducto.setLocationRelativeTo(null);
            dlgProducto.setVisible(true);
            //Cuando regresa del JDialog debe traer el producto con los atributos modificados
          
            if(this.productoMante!= null){
                try {
                    //Modifica el producto de la lista
                  Producto.modificarProducto((Refresco) productoMante);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error al modificar el producto\n"+ ex.toString());
                    System.exit(0);
                }
                     llenaTabla();
                    jTblProducto.clearSelection();
            }
            else{
            JOptionPane.showMessageDialog(null,"Debe seleccionar el producto a modificar");
            return;
                }
                    
            }
     }  
     }
      GrupoProductos.clearSelection();
    }//GEN-LAST:event_jBtnModificarActionPerformed

    private void jBtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarActionPerformed
        if(jRdbPlato.isSelected()){
             plato=true;
             adic=false;
          if(jTblProducto.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null,"Debe seleccionar el producto a eliminar");
            return;
        }
          String codigo = jTblProducto.getValueAt(jTblProducto.getSelectedRow(),0).toString();
        try {
            Producto.eliminarProducto(codigo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error al eliminar el producto \n"+ex.toString());
            System.exit(0);
        }
              llenaTabla();
       
       }else{
            if(jRdbAdic.isSelected()){
                   plato=false;
                   adic=true;
                  if(jTblProducto.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null,"Debe seleccionar el producto a eliminar");
            return;
        }
          String codigo = jTblProducto.getValueAt(jTblProducto.getSelectedRow(),0).toString();
        try {
            Producto.eliminarProducto(codigo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error al eliminar el producto \n"+ex.toString());
            System.exit(0);
        }
              llenaTabla();
            }else{
                if(jRdbAdic.isSelected()){
                   plato=false;
                   adic=true;
                  if(jTblProducto.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null,"Debe seleccionar el producto a eliminar");
            return;
        }
          String codigo = jTblProducto.getValueAt(jTblProducto.getSelectedRow(),0).toString();
        try {
            Producto.eliminarProducto(codigo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error al eliminar el producto \n"+ex.toString());
            System.exit(0);
        }
            }
                llenaTabla();
            }
       }  
         GrupoProductos.clearSelection();
              //actualiza la tabla con el nuevo producto
              desactivarBotonesModificarEliminar();
    }//GEN-LAST:event_jBtnEliminarActionPerformed

    private void jBtnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnConsultarActionPerformed
       if(jTblProducto.getSelectedRow()>= 0){
            String codigo = jTblProducto.getValueAt(jTblProducto.getSelectedRow(),0).toString();
            JDlgProducto dlgProducto = new JDlgProducto( codigo, TipoMantenProd.CONSULTAR);//OJO se envÃ­a al contructor del JDialog el cÃ³digo del prod
            dlgProducto.setModal(true);//Indica que no se puede pasar a la ventana anterior mientras no se cierre esta
            dlgProducto.setLocationRelativeTo(null);
            dlgProducto.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null,"Debe seleccionar el producto a consultar");
            return;
        }
        jTblProducto.clearSelection();
         GrupoProductos.clearSelection();   
         desactivarBotonesModificarEliminar();
    }//GEN-LAST:event_jBtnConsultarActionPerformed

    private void jBtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBtnSalirActionPerformed

    private void jTblProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblProductoMouseClicked
        
    }//GEN-LAST:event_jTblProductoMouseClicked

    private void jRdbPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRdbPlatoActionPerformed
        jBtnNuevo.setEnabled(true);
        jTblProducto.setEnabled(true);
        activarBotonesModificarEliminar();
    }//GEN-LAST:event_jRdbPlatoActionPerformed

    private void jRdbFrescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRdbFrescActionPerformed
        jBtnNuevo.setEnabled(true);
        jTblProducto.setEnabled(true);
        activarBotonesModificarEliminar();
    }//GEN-LAST:event_jRdbFrescActionPerformed

    private void jRdbAdicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRdbAdicActionPerformed
        jBtnNuevo.setEnabled(true);
        jTblProducto.setEnabled(true);
        activarBotonesModificarEliminar();
    }//GEN-LAST:event_jRdbAdicActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         desactivarBotonesModificarEliminar();
         GrupoProductos.clearSelection();
         llenaTabla();
    }//GEN-LAST:event_formWindowOpened

    private void activarBotonesModificarEliminar(){
       
        jBtnModificar.setEnabled(true);
        jBtnEliminar.setEnabled(true);
        jBtnConsultar.setEnabled(true);
    }
    
      private void desactivarBotonesModificarEliminar(){
        jBtnNuevo.setEnabled(false);
        jBtnConsultar.setEnabled(false);
        jBtnModificar.setEnabled(false);
        jBtnEliminar.setEnabled(false); 
    }
      
         
      private void llenaTabla(){
          modeloTableProducto.setRowCount(0);
          Object[] dato=new Object[3];
          ArrayList<Producto> listaPlato=new ArrayList<>();
    
          try{
            listaPlato=Producto.listadoProducto();
            
          }catch(Exception e){
              JOptionPane.showMessageDialog(null, "Error al leer el archivo, la aplicacion se cierra");
              System.exit(0);
          }
        
          
          for (Producto lista1 : listaPlato){
              dato[0]=lista1.getCodigo();
              dato[1]=lista1.getNombre();
              dato[2]=lista1.getPrecioBase();
              modeloTableProducto.addRow(dato);
          }
      }
     
      
        
      public static Producto getProductoMantenimiento(){
          return productoMante;
      }
      public static void setProductoMantenimento(Producto prod){
          productoMante=prod;
      }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GrupoProductos;
    private javax.swing.JButton jBtnConsultar;
    private javax.swing.JButton jBtnEliminar;
    private javax.swing.JButton jBtnModificar;
    private javax.swing.JButton jBtnNuevo;
    private javax.swing.JButton jBtnSalir;
    private javax.swing.JRadioButton jRdbAdic;
    private javax.swing.JRadioButton jRdbFresc;
    private javax.swing.JRadioButton jRdbPlato;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblProducto;
    private javax.swing.JToolBar jToolBarManten;
    // End of variables declaration//GEN-END:variables
}
